///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Demo3DS.Olivia
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddRecord recording.
    /// </summary>
    [TestModule("8de76445-f647-4754-ba63-b90773451aaf", ModuleType.Recording, 1)]
    public partial class AddRecord : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Demo3DS.Demo3DSRepository repository.
        /// </summary>
        public static global::Demo3DS.Demo3DSRepository repo = global::Demo3DS.Demo3DSRepository.Instance;

        static AddRecord instance = new AddRecord();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddRecord()
        {
            varFName = "John";
            varLName = "Doe";
            varAge = "44";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddRecord Instance
        {
            get { return instance; }
        }

#region Variables

        string _varFName;

        /// <summary>
        /// Gets or sets the value of variable varFName.
        /// </summary>
        [TestVariable("62770aae-d020-4e14-9eec-88ce2d7d07c7")]
        public string varFName
        {
            get { return _varFName; }
            set { _varFName = value; }
        }

        string _varLName;

        /// <summary>
        /// Gets or sets the value of variable varLName.
        /// </summary>
        [TestVariable("d2fb9fe2-cf62-4985-af9b-f317b2e937d3")]
        public string varLName
        {
            get { return _varLName; }
            set { _varLName = value; }
        }

        string _varAge;

        /// <summary>
        /// Gets or sets the value of variable varAge.
        /// </summary>
        [TestVariable("df324cc4-7630-47f2-b238-b30ae032cce7")]
        public string varAge
        {
            get { return _varAge; }
            set { _varAge = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable varDepartment.
        /// </summary>
        [TestVariable("ee50d8d7-8cd8-4648-8c02-7a9ba6de13b5")]
        public string varDepartment
        {
            get { return repo.varDepartment; }
            set { repo.varDepartment = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable varGender.
        /// </summary>
        [TestVariable("a067eebf-5e2b-4389-b51c-d3881940387e")]
        public string varGender
        {
            get { return repo.varGender; }
            set { repo.varGender = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            // FirstName
            Report.Log(ReportLevel.Info, "Section", "FirstName", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddEntry.FirstNameField' at Center.", repo.AddEntry.FirstNameFieldInfo, new RecordItemIndex(1));
            repo.AddEntry.FirstNameField.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varFName' with focus on 'AddEntry.FirstNameField'.", repo.AddEntry.FirstNameFieldInfo, new RecordItemIndex(2));
            repo.AddEntry.FirstNameField.PressKeys(varFName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(3));
            Delay.Duration(2000, false);
            
            // LastName
            Report.Log(ReportLevel.Info, "Section", "LastName", new RecordItemIndex(4));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddEntry.LastNameField' at Center.", repo.AddEntry.LastNameFieldInfo, new RecordItemIndex(5));
            repo.AddEntry.LastNameField.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varLName' with focus on 'AddEntry.LastNameField'.", repo.AddEntry.LastNameFieldInfo, new RecordItemIndex(6));
            repo.AddEntry.LastNameField.PressKeys(varLName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(7));
            Delay.Duration(2000, false);
            
            // Department
            Report.Log(ReportLevel.Info, "Section", "Department", new RecordItemIndex(8));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddEntry.DeptDownBtn' at Center.", repo.AddEntry.DeptDownBtnInfo, new RecordItemIndex(9));
            repo.AddEntry.DeptDownBtn.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddEntry.Department' at 172;2.", repo.AddEntry.DepartmentInfo, new RecordItemIndex(10));
            repo.AddEntry.Department.Click("172;2");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'AddEntry.AgeField' at 12;10.", repo.AddEntry.AgeFieldInfo, new RecordItemIndex(11));
            repo.AddEntry.AgeField.DoubleClick("12;10");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(12));
            Delay.Duration(2000, false);
            
            // Age
            Report.Log(ReportLevel.Info, "Section", "Age", new RecordItemIndex(13));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varAge' with focus on 'AddEntry.AgeField'.", repo.AddEntry.AgeFieldInfo, new RecordItemIndex(14));
            repo.AddEntry.AgeField.PressKeys(varAge);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(15));
            Delay.Duration(2000, false);
            
            // Gender
            Report.Log(ReportLevel.Info, "Section", "Gender", new RecordItemIndex(16));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddEntry.GenderRadioBtn' at 5;8.", repo.AddEntry.GenderRadioBtnInfo, new RecordItemIndex(17));
            repo.AddEntry.GenderRadioBtn.Click("5;8");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(18));
            Delay.Duration(2000, false);
            
            // Submit
            Report.Log(ReportLevel.Info, "Section", "Submit", new RecordItemIndex(19));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AddEntry.AddPersonBtn' at 41;13.", repo.AddEntry.AddPersonBtnInfo, new RecordItemIndex(20));
            repo.AddEntry.AddPersonBtn.Click("41;13");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(21));
            Delay.Duration(2000, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.RxMainFrame.Self, false, new RecordItemIndex(22));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
